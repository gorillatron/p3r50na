;; Analyzed by ClojureScript 1.7.48
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name p3r50na.apps.bookof5rinds.client, :imports nil, :requires {om om.core, om.core om.core, dom om.dom, om.dom om.dom, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {rindidate-list {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\p3r50na\\src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 37, :column 7, :end-line 37, :end-column 21, :arglists (quote ([rindidates]))}, :name p3r50na.apps.bookof5rinds.client/rindidate-list, :variadic false, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :end-column 21, :method-params ([rindidates]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rindidates]))}, t38754 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name p3r50na.apps.bookof5rinds.client/t38754, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :type true, :anonymous true, :column 3, :line 46, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t38787 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app state owner meta38788])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name p3r50na.apps.bookof5rinds.client/->t38787, :variadic false, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :method-params ([app state owner meta38788]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 46, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app state owner meta38788])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t38754 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app state owner meta38755])), :file nil}, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name p3r50na.apps.bookof5rinds.client/->t38754, :variadic false, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :method-params ([app state owner meta38755]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 46, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app state owner meta38755])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, on-delete-rind-handler {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\p3r50na\\src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 31, :column 7, :end-line 31, :end-column 29, :arglists (quote ([e rindidate]))}, :name p3r50na.apps.bookof5rinds.client/on-delete-rind-handler, :variadic false, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :end-column 29, :method-params ([e rindidate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([e rindidate]))}, socket {:name p3r50na.apps.bookof5rinds.client/socket, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :meta {:file "C:\\cygwin64\\progg\\p3r50na\\src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 15, :column 6, :end-line 15, :end-column 12}}, comm {:name p3r50na.apps.bookof5rinds.client/comm, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 13, :column 1, :end-line 13, :end-column 10, :meta {:file "C:\\cygwin64\\progg\\p3r50na\\src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 13, :column 6, :end-line 13, :end-column 10}}, handle-new-rind-keydown {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\p3r50na\\src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([e state owner]))}, :name p3r50na.apps.bookof5rinds.client/handle-new-rind-keydown, :variadic false, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :end-column 30, :method-params ([e state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([e state owner]))}, app-state {:name p3r50na.apps.bookof5rinds.client/app-state, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 10, :column 1, :end-line 10, :end-column 15, :meta {:file "C:\\cygwin64\\progg\\p3r50na\\src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 10, :column 6, :end-line 10, :end-column 15}}, app {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\p3r50na\\src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :line 45, :column 7, :end-line 45, :end-column 10, :arglists (quote ([state owner]))}, :name p3r50na.apps.bookof5rinds.client/app, :variadic false, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :end-column 10, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, t38787 {:num-fields 4, :protocols #{om.core/IRenderState om.core/IWillMount cljs.core/IMeta cljs.core/IWithMeta}, :name p3r50na.apps.bookof5rinds.client/t38787, :file "src\\p3r50na\\apps\\bookof5rinds\\client.cljs", :type true, :anonymous true, :column 3, :line 46, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{owner :else :name :command :recur :state meta38755 state :target quote :arglists :rindidates app :keywordize-keys meta38788 :data}, :order [:rindidates :name :command :data :recur :state :else app :arglists quote state owner meta38755 meta38788 :target :keywordize-keys]}, :doc nil}